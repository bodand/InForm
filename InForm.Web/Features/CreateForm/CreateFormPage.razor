@page "/Create"
@using InForm.Web.Features.CreateForm.Elements

<div class="h-12"></div>
<EditForm class="h-full flex flex-col md:flex-row"
          FormName="create_form"
          Model="CreateForm">
    <FluentValidationValidator/>

    <div class="flex flex-col h-min md:h-full w-full md:w-1/4 md:pr-4 mt-6 border-solid">
        <TextEntry Id="form_title"
                   Label="Form Title"
                   @bind-Value="CreateForm!.Title"
                   ValidationFor="@(() => CreateForm.Title)"/>
        <TextEntry Class="mt-6"
                   Id="form_subtitle"
                   Label="Form Subtitle"
                   @bind-Value="CreateForm!.Subtitle"
                   ValidationFor="@(() => CreateForm.Subtitle)"/>

        <button class="block border-b-2 border-slate-400 p-2 my-4 focus:ring-0
                       hover:bg-slate-950 hover:dark:bg-slate-100 hover:border-slate-50
                       hover:dark:border-slate-950 hover:dark:text-zinc-950 hover:text-zinc-100">
            Publish
        </button>
    </div>

    <div class="flex flex-col md:pl-4 w-full">
        <div class="mb-6">
            <h2 class="block text-xl md:text-3xl w-fit border-solid border-b-2 border-slate-400">
                Form elements
            </h2>
            <ValidationMessage For="@(() => CreateForm.ElementModels)"></ValidationMessage>
        </div>

        @for (var i = 0; i < CreateForm.ElementModels.Count; i++)
        {
            <ElementEditor @bind-Value="CreateForm.ElementModels[i]"/>
        }
    </div>
</EditForm>

@code {

    public CreateFormModel CreateForm { get; set; } = new()
    {
        ElementModels =
        [
            new StringElementModel()
        ]
    };

}